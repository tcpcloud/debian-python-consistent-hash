Source: consistent-hash
Maintainer: Filip Pytloun <filip.pytloun@tcpcloud.eu>
Section: python
Priority: optional
Build-Depends: python-setuptools (>= 0.6b3), python-all (>= 2.6.6-3), debhelper (>= 9), dh-python, python-pbr
Standards-Version: 3.9.1

Package: python-consistent-hash
Architecture: all
Depends: ${misc:Depends}, ${python:Depends}
Description: Implements consistent hashing with Python and the algorithm
 consistent-hash
 ===============
 .
 Implements consistent hashing that can be used when the number of server nodes can increase or decrease.The algorithm that is used for consistent hashing is the same as libketama <https://github.com/RJ/ketama>
 .
 Usage
 ===============
 It's so easy to use^_^::
 .
     from consistent_hash import ConsistentHash
 .
     # You can construct consistent hash with the below three ways
     con_hash = ConsistentHash({'192.168.0.101:11212':1, '192.168.0.102:11212':2, '192.168.0.103:11212':1})
     # Or
     con_hash = ConsistentHash(['192.168.0.101:11212', '192.168.0.102:11212', '192.168.0.103:11212']))
     # Or
     con_hash = ConsistentHash('192.168.0.101:11212')
 .
     # Add servers to hash ring
     con_hash.add_nodes({'192.168.0.104:11212':1})

